name: 'Switch SMB'
description:  'Modifies the devcontainer.json of the current repo dir to turn on/off SMB'
inputs:
  REPO_DIR:
    description: 'The path to the repo directory'
    required: true
    type: string
  VALUE:
    description: 'The value to set the smb_enabled_in_cluster to'
    required: true
    type: string
  
runs:
    using: 'composite'

    steps:
        
        ## Build the Service's Devcontainer and wait for pods to spin up (unnecessary when devcontainer up composite action is available)
        - name: Update devcontainer.json
          shell: bash
          run: |
            echo "Reading confugration"

            # Path to the devcontainer.json file
            DEVCONTAINER_FILE="devcontainer.json"
            
            DEVCONTAINER_JSON=$(devcontainer read-configuration --workspace-folder ${{ inputs.REPO_DIR }} --log-level debug)

            Substring to search for
            SEARCH_SUBSTRING="ghcr.io/microsoft/azure-orbital-space-sdk/spacefx-dev"

            # Use jq to search for the feature containing the substring
            FEATURE=$(echo "$DEVCONTAINER_JSON" | jq -r --arg search "$SEARCH_SUBSTRING" '.configuration.features | to_entries[] | select(.key | contains($search))')

            # Check if the feature was found
            if [ -n "$FEATURE" ]; then
                echo "Feature found:"
                echo "$FEATURE"

                # Add "smb_enabled_in_cluster": True to the found feature
                MODIFIED_FEATURE=$(echo "$FEATURE" | jq '.value += {"smb_enabled_in_cluster": ${{ inputs.VALUE }} ')

                # Update the devcontainer.json with the modified feature
                UPDATED_DEVCONTAINER_JSON=$(echo "$DEVCONTAINER_JSON" | jq --argjson feature "$MODIFIED_FEATURE" --arg key "$(echo "$FEATURE" | jq -r '.key')" '
                    .configuration.features[$key] = $feature.value
                ')

                echo "Remove the extra configFilePath"
                # Remove the extra configFilePath
                UPDATED_DEVCONTAINER_JSON=$(echo "$UPDATED_DEVCONTAINER_JSON" | jq 'del(.configuration.configFilePath)')

                echo "Extract only the configuration"
                # extract only the configuration
                echo "$UPDATED_DEVCONTAINER_JSON" | jq '.configuration' > ${{ inputs.REPO_DIR }}/.devcontainer/devcontainer.json

                cat  ${{ inputs.REPO_DIR }}/.devcontainer/devcontainer.json
                
                echo "devcontainer.json updated successfully."
            else
                echo "Feature containing '$SEARCH_SUBSTRING' not found."
                exit 1
            fi