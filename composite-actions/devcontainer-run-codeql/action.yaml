name: 'run-codeql-scan'
description:  'Runs a scan of codeql'
inputs:
    source-directory:
      description: 'The source directory to scan'
      required: true
    dotnet-project-path:
      description: 'The path to the dotnet project'
      required: true
    database-name:
      description: 'The name of the database'
      required: true
    language: 
      description: 'The language to scan'
      default: 'csharp'
      required: true
    results-file-path:
      description: 'The path to the results file'
      default: "/var/spacedev/tmp/analysis-results.sarif"
    container-name:
      description: 'The name of the container'
      required: true
    artifact-name:
      description: 'The name of the artifact'
      default: "codeql-analysis-results"
runs:
    using: 'composite'
    steps:
        - name: Perform login steps
          shell: bash
          run: |
            echo "Init database..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database init ${{ inputs.database-name }} -s ${{ inputs.source-directory }} --language=${{ inputs.language }} --overwrite"
            echo ""

            echo "Download qlpacks..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql pack download codeql/csharp-queries@1.0.2"
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql pack download codeql/threat-models@1.0.2"
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql pack download codeql/csharp-solorigate-queries@1.0.1"
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql pack download codeql/csharp-solorigate-all@1.0.1"
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql pack download codeql/csharp-upgrades@0.0.7"
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql pack download githubsecuritylab/codeql-csharp-queries"

            echo ""

            echo "Trace commands dotnet clean..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database trace-command ${{ inputs.database-name }} dotnet clean ${{ inputs.dotnet-project-path }}"
            echo ""

            echo "Trace commands dotnet restore..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database trace-command ${{ inputs.database-name }} dotnet restore ${{ inputs.dotnet-project-path }}"
            echo ""

            echo "Trace commands dotnet build..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database trace-command ${{ inputs.database-name }} dotnet build ${{ inputs.dotnet-project-path }}"
            echo ""

            echo "Database finalize..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database finalize ${{ inputs.database-name }}"
            echo ""

            echo "Resolve qlpacks..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql resolve qlpacks"
            echo ""

            echo "Database finalize..."
            docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database finalize ${{ inputs.database-name }}"
            echo ""

            #echo "Database Query..."
            #docker exec ${{ inputs.container-name }} bash -c "bash /root/codeql/codeql/codeql database analyze ${{ inputs.database-name }} codeql/csharp-queries codeql/csharp-solorigate-queries githubsecuritylab/codeql-csharp-queries --format=sarif-latest --output=${{ inputs.results-file-path }}"

        - name: Upload analysis results
          uses: actions/upload-artifact@v2
          with:
            name: ${{ inputs.artifact-name }}
            path: ${{ inputs.results-file-path }}